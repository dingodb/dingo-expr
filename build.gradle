/*
 * Copyright 2021 DataCanvas
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id("com.gradleup.nmcp.aggregation").version("0.1.4")
}

group GROUP
version VERSION

subprojects {
    group GROUP
    version VERSION

    project.gradle.taskGraph.whenReady { graph ->
        if ((version as String).endsWith("SNAPSHOT")) {
            project.tasks.findAll().forEach { task ->
                if (task.name.startsWith("sign")) {
                    task.enabled = false
                }
            }
        }
    }
}

nmcpAggregation {
    centralPortal {
        username = System.getenv("MAVEN_USERNAME") != null
            ? System.getenv("MAVEN_USERNAME")
            : project.findProperty("centralUsername")
        password = System.getenv("MAVEN_USERNAME") != null
            ? System.getenv("MAVEN_USERNAME")
            : project.findProperty("centralPassword")
        publishingType = "AUTOMATIC"
    }

    repositories {
        maven {
            def releasesRepoUrl = "https://ossrh-staging-api.central.sonatype.com/service/local/"
            def snapshotsRepoUrl = "https://central.sonatype.com/repository/maven-snapshots/"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
        }
    }

    // Publish all projects that apply the 'maven-publish' plugin
    publishAllProjectsProbablyBreakingProjectIsolation()
}

dependencies {
    nmcpAggregation(project(":dingo-expr-annotations"))
    nmcpAggregation(project(":dingo-expr-coding"))
    nmcpAggregation(project(":dingo-expr-common"))
    nmcpAggregation(project(":dingo-expr-json"))
    nmcpAggregation(project(":dingo-expr-parser"))
    nmcpAggregation(project(":dingo-expr-rel"))
    nmcpAggregation(project(":dingo-expr-runtime"))
}
