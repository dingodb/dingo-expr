/*
 * Copyright 2021 DataCanvas
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'antlr'
    id 'java-conventions'
    id 'java-library'
    id 'com.gorylenko.gradle-git-properties' version "${gradleGitPropertiesVersion}"
    id 'maven-publish'
}

gitProperties {
    keys = gradle.gitPropertiesKeys
}

dependencies {
    antlr group: "org.antlr", name: "antlr4", version: 'antlr'.v()
    api project(':dingo-expr-runtime')
    testImplementation project(':dingo-expr-test')
    implementation project(':dingo-expr-common')
}

generateGrammarSource {
    arguments += ['-package', 'io.dingodb.expr.parser', '-visitor', '-no-listener']
    outputDirectory = file(buildDir.toString() + '/generated-src/antlr/main/io/dingodb/expr/parser/')
}

tasks.withType(Checkstyle).configureEach {
    // Exclude Antlr4 generated code.
    exclude '**/DingoExprLexer.java'
    exclude '**/DingoExprParser.java'
    exclude '**/DingoExprParserBaseVisitor.java'
    exclude '**/DingoExprParserVisitor.java'
}

publishing {
    publications {
        parser(MavenPublication) {
            artifactId = 'dingo-expr-parser'
            from components.java
            pom {
                name = 'dingo-expr-parser'
                description = 'Literal parser of Dingo Expression.'
            }
            gradle.setPom(it)
        }
    }
    repositories {
        gradle.setOssrhRepo(it, project)
    }
}

signing {
    sign publishing.publications.parser
}
